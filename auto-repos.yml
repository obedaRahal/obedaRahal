name: Update README repos grid

on:
  schedule:
    - cron: "0 6 * * *"   # يحدث يوميًا 06:00 UTC (عدّل إذا رغبت)
  workflow_dispatch:       # للتشغيل اليدوي من Actions

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Generate repos grid in README
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = require('path');

            const USERNAME = 'obedaRahal';
            const REPO = process.env.GITHUB_REPOSITORY.split('/')[1];
            const README_PATH = path.join(process.cwd(), 'README.md');

            // اجلب حتى 100 ريبو عام، رتب بالأحدث تحديثًا
            const repos = await github.paginate(
              github.rest.repos.listForUser,
              { username: USERNAME, per_page: 100, sort: 'updated', direction: 'desc' }
            );

            // استبعد الفوركات والأرشيف، وخذ فقط العامة
            const clean = repos
              .filter(r => !r.fork && !r.archived && !r.private)
              .sort((a,b) => new Date(b.pushed_at) - new Date(a.pushed_at));

            const TAKE = 4; // عدّلها إن أردت أكثر (6، 8…)
            const picked = clean.slice(0, TAKE);

            function esc(s='') {
              return s.replace(/\r?\n/g, ' ').replace(/\|/g, '\\|').trim();
            }
            function trunc(s='', n=90) {
              const t = s.trim();
              return t.length > n ? t.slice(0, n-1) + '…' : t;
            }

            // ابنِ جدول 2×2
            const cols = 2;
            let rows = [];
            for (let i = 0; i < picked.length; i += cols) {
              const slice = picked.slice(i, i + cols);
              // صف الكروت
              const cards = slice.map(r =>
                `[![Readme Card](https://github-readme-stats.vercel.app/api/pin/?username=${USERNAME}&repo=${r.name}&theme=light)](https://github.com/${USERNAME}/${r.name})`
              );
              // صف الأوصاف
              const descs = slice.map(r =>
                `<sub>${trunc(esc(r.description || 'No description'))}</sub>`
              );

              // املأ الخانات الفارغة إذا العدد فردي
              while (cards.length < cols) cards.push(' ');
              while (descs.length < cols) descs.push(' ');

              rows.push(`| ${cards.join(' | ')} |`);
              rows.push(`| ${descs.join(' | ')} |`);
            }

            const header = `| Repo | Repo |\n|---|---|`;
            const table = [header, ...rows].join('\n');

            // حمّل README واستبدل المنطقة المحددة
            let readme = fs.readFileSync(README_PATH, 'utf8');
            const start = '<!-- AUTO-REPOS:START -->';
            const end = '<!-- AUTO-REPOS:END -->';
            const pattern = new RegExp(`${start}[\\s\\S]*?${end}`, 'm');

            const block = `${start}\n${table}\n${end}`;
            if (!pattern.test(readme)) {
              core.setFailed('Markers not found in README. Make sure AUTO-REPOS markers exist.');
            } else {
              readme = readme.replace(pattern, block);
              fs.writeFileSync(README_PATH, readme);
              core.info('README updated with latest repositories.');
            }

      - name: Commit & push
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update latest repositories grid"
          branch: ${{ github.ref_name }}
